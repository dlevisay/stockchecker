name: Stock/Crypto Trading Bot

# This workflow runs on a schedule and can also be triggered manually.
on:
  schedule:
    # Runs every 5 minutes.
    - cron: '*/5 * * * *'
  # Allows you to manually run the workflow from the GitHub Actions tab
  workflow_dispatch:

# Add this permissions block to grant write access
permissions:
  contents: write

jobs:
  run-trading-bot:
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest

    # Define environment variables
    env:
      PAPER_TRADING_MODE: true
      ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
      ALPACA_SECRET_KEY: ${{ secrets.ALPACA_SECRET_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas ta yfinance alpaca-py requests

      - name: Configure Git for Actions Bot
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Load previous bot state (positions.json)
        run: |
          git fetch origin main || echo "Main branch not found, assuming first run."
          git checkout origin/main -- positions.json || echo "positions.json not found, creating new one."
          if [ ! -f positions.json ]; then
            echo "{}" > positions.json
            echo "Created empty positions.json for first run."
          fi
          echo "Current positions.json content:"
          cat positions.json || echo "(empty)"

      - name: Run Trading Bot
        run: python trading_bot.py

      - name: Commit updated positions
        run: |
          git add positions.json
          if git diff --cached --quiet; then
            echo "No changes to positions.json. Skipping commit."
          else
            git commit -m "Bot updated positions. [skip ci]"
            git push origin HEAD:${GITHUB_REF##*/}
            echo "Successfully committed and pushed updated positions.json."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
